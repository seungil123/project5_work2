1. git으로 관리할 경로까지 이동

2. 초기화(.git폴더 생성됨 - 숨겨져 있음.)
git init
-> ls -al 숨겨진 파일 확인
-> .git 폴더 삭제(rm -rf .git)

3.브랜치 이름 기본값 변경하기 (master일때)
git config --global init.defaultBranch main

4.git 상태확인
git status

5. git 으로 관리하는 파일로 추가
git add .

6. commit(해당 시점을 저장'중요한 부분을 기억할때')
git commit -m "커밋 메시지"

7. commit 이전에 계정정보 등록(--global옵션은 해당 컴퓨터 전체에 적용)
git config --global user.name "Your name"
git config --global user.email you@example.com

git config list
git config --global  --unset user.email(기존세팅된거 제거)
git config --global  --unset user.name


8. commit 정보확인
git log

9. 과제
project5/ test1를 생성
git으로 관리->init
파일 생성은 알아서... 최소 커밋의 수는 5번 이상 되도록 하세요
과제를 여기다가 하는건가


-----------------------------------
로컬 컴퓨터(코드있음)와 github 사이트(비어있음) 연결
1.remote 정보 확인
git remote
git remot -v

2. remote 추가
git remote add 리모트이름 github 리파지토리 주소
git remote add origin https://github.com/shimseonjo/project5_work1.git

3. remote 삭제
git remote rm 리모트이름
git remote rm origin

4. github 데이터 넣기
git push -u origin main
git push


clone 
- 코드가 없는 상태에서 전체 코드를 다운로드 받을 경우



---------------------------
pull 
- 코드가 있는 상태에서 변경된 부분만 받을 경우


--------------------
브랜치 작성
- 브랜치 목록 확인
git branch

- 브랜치 생성
git branch test01

- 브랜치 이동
git switch test01

- 브랜치에서 소스 코딩, add, commit 작업 진행


----------------------
브랜치 병합
-main에서(main으로 코드 합류)
git merge 브랜치명
git add .
git commit -m "메시지"

브랜치 삭제
git branch -d 브랜치명

브랜치 복구
git branch 브랜치명 커밋번호

git log --graph --oneline
-----------------------------------
  

팀으로 작업하기

- collaborators 등록해서
- pr 발행

------------------------

-----------------------








